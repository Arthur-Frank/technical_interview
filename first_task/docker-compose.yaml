version: '3.7'

volumes:
    prometheus_data: {}
    grafana_data: {}
    postgres_data: {}

networks:
   technical_interview:
     driver: bridge

services:
  technical_interview:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: technical_interview
    ports:
      - 9443:9443
    networks:
      - technical_interview
    depends_on:
      - postgres
    labels:
        org.label-schema.group: "technical_interview"

  postgres:
    image: "postgres" 
    volumes:
      - postgres_data:/var/lib/postgresql/data/ 
      - postgres_data:/postgres
    container_name: postgresdb
    environment:
      POSTGRES_PASSWORD: postgres
      POSTGRES_USER: postgres
    command: postgres -c shared_preload_libraries='pg_stat_statements' -c pg_stat_statements.track=all -c pg_stat_statements.track_planning=true -c max_connections=100
    ports:
      - 5432:5432
    networks:
      - technical_interview
    labels:
        org.label-schema.group: "postgres"

  postgres_exporter:
    image: wrouesnel/postgres_exporter
    container_name: postgres_exporter
    depends_on:
      - postgres
    volumes:
      - ./preconfigure/pg_exporter/:/etc/pg_exporter
    command:
      - '--extend.query-path=/etc/pg_exporter/statements.yaml'
    ports:
      - 9187:9187
    networks:
      - technical_interview
    environment:
      DATA_SOURCE_NAME: "postgresql://postgres:postgres@postgresdb:5432/?sslmode=disable"
    labels:
      org.label-schema.group: "monitoring"        

  prometheus:
    image: prom/prometheus
    container_name: prometheus
    volumes:
      - ./preconfigure/prometheus/:/etc/prometheus/
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention=200h'
      - '--web.enable-lifecycle'
    ports:
      - 9090:9090
    networks:
      - technical_interview
    labels:
      org.label-schema.group: "monitoring"

  grafana:
    image: grafana/grafana
    container_name: grafana
    volumes:
      - grafana_data:/var/lib/grafana
      - ./preconfigure/grafana/datasources:/etc/grafana/provisioning/datasources
      - ./preconfigure/grafana/dashboards:/etc/grafana/provisioning/dashboards
    environment:
      - GF_SECURITY_ADMIN_USER=${ADMIN_USER:-admin}
      - GF_SECURITY_ADMIN_PASSWORD=${ADMIN_PASSWORD:-admin}
      - GF_USERS_ALLOW_SIGN_UP=false
    ports:
      - 3000:3000
    networks:
      - technical_interview
    labels:
      org.label-schema.group: "monitoring"

  cadvisor:
    image: google/cadvisor
    container_name: cadvisor
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
      - /var/run/docker.sock:/var/run/docker.sock:rw
      #- /cgroup:/cgroup:ro #only for Linux, not MAC OS
    ports:
      - 8080:8080
    networks:
      - technical_interview
    labels:
      org.label-schema.group: "monitoring"

  nodeexporter:
    image: prom/node-exporter
    container_name: node-exporter
    user: root
    privileged: true
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.ignored-mount-points=^/(sys|proc|dev|host|etc)($$|/)'
    ports:
      - 9100:9100
    networks:
      - technical_interview
    labels:
      org.label-schema.group: "monitoring"